# nginx-reverse-proxy.conf
events {
  worker_connections 1024;
}
 
http {
    sendfile on;


    upstream api_servers {
	    server api1:8080;
	    server api2:8080;

    }

    server {
        listen 80;
        server_name _;

        location / {
            proxy_pass http://ang-app:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
            
            # Disable caching
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate' always;
            add_header Pragma 'no-cache' always;
            add_header Expires '0' always;
            add_header Content-Security-Policy "script-src 'unsafe-inline' 'unsafe-eval' 'self'; object-src 'self';frame-ancestors 'none';";

            # try_files $uri $uri/ /index.html =404;
            }
    
    #  location = / {
    #      #return 301 /seqlog/;
    # }
    
        location /seqlog/ {
            # rewrite ^/seqlog(/.*)$ /$1 break;  # Remove only the /seqlog prefix
            proxy_pass http://seqlog:80/;      # Note the removal of trailing slash to avoid double slashes
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_redirect   off;
            proxy_set_header X-Forwarded-Prefix /seqlog; # Inform backend about the base path

            # Disable caching
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate' always;
            add_header Pragma 'no-cache' always;
            add_header Expires '0' always;
            add_header Content-Security-Policy "script-src 'unsafe-inline' 'unsafe-eval' 'self'; object-src 'self';frame-ancestors 'none';";
            proxy_cache_bypass $http_upgrade;

            # Add the forwarded headers to the response
            add_header X-Forwarded-For $proxy_add_x_forwarded_for always;
            add_header X-Forwarded-Proto $scheme always;
            add_header X-Real-IP $remote_addr always;

        }
        location /api {
            proxy_pass         http://api_servers;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;

         # Add the following lines to enable Swagger for the /api location
          
        }
        location ~ /api/swagger(/.*)?$ {
            rewrite ^/api/swagger(/.*)?$ /swagger$1 break;  # Adjust the URI for the backend
            proxy_pass http://api_servers;  # Pass the request to the upstream servers
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
    }
    }
  
}

